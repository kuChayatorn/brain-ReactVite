/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 public/brain.gltf 
*/

import React, { useEffect, useState } from 'react'
import { useGLTF, useScroll } from '@react-three/drei'
import { useFrame } from '@react-three/fiber';
import { easing } from 'maath'
import * as THREE from 'three'

const Model = ({ handleCardIndex , ...props}) => {
  console.log(`props`,props)
  const { scene, nodes, materials } = useGLTF('/brain.gltf')
  console.log(materials)
  const scroll = useScroll();
  const [scrollOffset, setScrollOffset] = useState(0);
  const [currentHighlightChildIndex, setCurrentHighlightChildIndex] = useState(1);
  const [hoveredItem, setHoveredItem] = useState(null);

  useFrame((state, delta) => {
    setScrollOffset(scroll.offset >= 0 ? scroll.offset % 1 : (1 + scroll.offset) % 1)
  });

  const handlePointerClick = (index, e) => {
    hoveredItem?.material && (hoveredItem.material = materials.BRAIN_TEXTURE_blinn2)
    if (e?.object?.material && e.object.material.color) {
      const material = e.object.material.clone();
      material.color.set("#ff0000");
      e.object.material = material;
    }
    setHoveredItem(e.object);
    setCurrentHighlightChildIndex(index);
    handleCardIndex(index);
  };

  return (
    <group {...props} dispose={null}  rotation-y={scrollOffset * (2 * Math.PI)}>
      <mesh
        onClick={(e) => (e.stopPropagation(), handlePointerClick(0,e))}
        geometry={nodes.Brain_Part_02.geometry}
        material={materials.BRAIN_TEXTURE_blinn2}
        position={[-0.793, 0.552, -0.096]}
        rotation={[1.584, 0, 0]}
        scale={3.586} />
      <mesh
        onClick={(e) => (e.stopPropagation(), handlePointerClick(1,e))}
        geometry={nodes.Brain_Part_04.geometry}
        material={materials.BRAIN_TEXTURE_blinn2}
        position={[0.046, 1.873, 0.748]}
        rotation={[1.584, 0, 0]}
        scale={3.586} />
      <mesh
        onClick={(e) => (e.stopPropagation(), handlePointerClick(2,e))}
        geometry={nodes.Brain_Part_05.geometry}
        material={materials.BRAIN_TEXTURE_blinn2}
        position={[-0.768, 1.283, 0.889]}
        rotation={[1.584, 0, 0]}
        scale={3.586} />
      <mesh
        onClick={(e) => (e.stopPropagation(), handlePointerClick(3,e))}
        geometry={nodes.Brain_Part_06.geometry}
        material={materials.BRAIN_TEXTURE_blinn2}
        position={[-1.492, 1.873, 0.748]}
        rotation={[1.584, 0, 0]}
        scale={3.586} />
    </group>
  )
}

useGLTF.preload('/brain.gltf')

export default Model
